apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkversions
    buildToolsVersion rootProject.ext.android.buildToolsversions

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkversions
        targetSdkVersion rootProject.ext.android.targetSdkversions
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    api rootProject.ext.dependencies["bm_photoview"]
    api rootProject.ext.dependencies["photoview"]
    api rootProject.ext.dependencies["mpandroidchart"]
    api 'com.github.bumptech.glide:glide:3.7.0'

    //引入fragmentation框架
    api(rootProject.ext.dependencies["fragmentation"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    api(rootProject.ext.dependencies["fragmentation-core"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }

    api(rootProject.ext.dependencies["okhttp3"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }

    api(rootProject.ext.dependencies["okhttp3-logging"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }

    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }

    api(rootProject.ext.dependencies["butterknife"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    api(rootProject.ext.dependencies["arouter"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    // 引入arouter
    annotationProcessor(rootProject.ext.dependencies["arouter-compiler"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }

    api 'com.github.warkiz.widget:indicatorseekbar:2.1.2'
    api(rootProject.ext.dependencies["pickerview"]) {
        exclude group: 'support-annotations'
        exclude group: 'support-v7'
        exclude group: 'support-v4'
    }
    api("com.qmuiteam:qmui:1.4.0") {
        exclude group: 'com.android.support'
    }

    //引入dagger
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    api rootProject.ext.dependencies["dagger2-android"]
    api rootProject.ext.dependencies["dagger2-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]//引入dagger2
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]//引入dagger2-android

    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle2-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies['rxerrorhandler2']
    api(rootProject.ext.dependencies["pickerview"]) {
        exclude group: 'com.android.support'
    }
}
